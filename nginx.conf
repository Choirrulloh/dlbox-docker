# Generated by nginxconfig.io
# Replace yourdomain.com with your own domain name.

user www-data;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
	multi_accept on;
	worker_connections 65535;
}

http {
	charset utf-8;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	server_tokens off;
	log_not_found off;
	types_hash_max_size 2048;
	client_max_body_size 16M;

	# logging
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log warn;

	# limits
	limit_req_log_level warn;
	limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;

	# SSL
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:1m;  # about 4000 sessions
    ssl_session_tickets off;

	# Mozilla Modern configuration
	ssl_protocols TLSv1.3;

	# OCSP Stapling
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 1.1.1.1 1.0.0.1 valid=60s;
	resolver_timeout 2s;

    # wget https://ssl-config.mozilla.org/ffdhe4096.txt -O /etc/nginx/dhparam
    ssl_dhparam /etc/nginx/dhparam;

	# load configs
	include /etc/nginx/conf.d/*.conf;

	# yourdomain.com
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
	
		server_name yourdomain.com;
		root /var/www/html/public;
	
		# SSL
		ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
		ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.com/chain.pem;
	
		
		# . files
		location ~ /\.(?!well-known) {
			deny all;
		}
	
		# reverse proxy

		#radarr
		location ^~ /radarr {
    		proxy_pass http://127.0.0.1:7878;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		location ^~ /radarr/api {
    		proxy_pass http://127.0.0.1:7878;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		#sonarr
		location ^~ /sonarr {
    		proxy_pass http://127.0.0.1:8989;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		location ^~ /sonarr/api {
    		proxy_pass http://127.0.0.1:8989;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}
		#jackett
		location ^~ /jackett {
    		proxy_pass http://127.0.0.1:9117;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		location ^~ /jackett/api {
    		proxy_pass http://127.0.0.1:9117;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}	

		location ^~ /jackett/dl {
    		proxy_pass http://127.0.0.1:9117;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		  }
			

		#deluge
		location /deluge {
    		return 301 $scheme://$host/deluge/;
		}

		location ^~ /deluge/ {
    		proxy_pass http://127.0.0.1:8112;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		  
    		rewrite /deluge(.*) $1 break;
    		proxy_set_header X-Deluge-Base "/deluge/";
		}
		
		#bazarr
		location /bazarr {
    		return 301 $scheme://$host/bazarr/;
		}

		location ^~ /bazarr/ {
    		proxy_pass http://127.0.0.1:9117;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		  }

		#plex
		location /plex/ {
    		proxy_pass http://172.21.21.15:32400/web/;
   			proxy_read_timeout 240;
    		proxy_redirect off;
    		proxy_buffering off;
			proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       # put a comment before this row if you want to use bind address as localhost for reverse proxy
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		# gzip
		gzip off;
	}
	
	# HTTP redirect
	server {
		listen 80;
		listen [::]:80;
	
		server_name yourdomain.com;
	
		# ACME-challenge
		location ^~ /.well-known/acme-challenge/ {
			root /var/www/_letsencrypt;
		}
	
		location / {
			return 301 https://yourdomain.com$request_uri;
		}
	}
}
